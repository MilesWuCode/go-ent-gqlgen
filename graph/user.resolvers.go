package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"go-ent-gqlgen/ent"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input ent.CreateUserInput) (*ent.User, error) {
	// 新增一筆資料
	client := ent.FromContext(ctx)
	return client.User.Create().SetInput(input).Save(ctx)
}

// UpdateUser is the resolver for the updateUser field.
func (r *mutationResolver) UpdateUser(ctx context.Context, id int, input ent.UpdateUserInput) (*ent.User, error) {
	// 更新一筆資料
	return r.client.User.UpdateOneID(id).SetInput(input).Save(ctx)
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id int) (*ent.User, error) {
	// 用id查一筆資料
	return r.client.User.Get(ctx, id)
}

// FirstLetter is the resolver for the firstLetter field.
func (r *userResolver) FirstLetter(ctx context.Context, obj *ent.User) (string, error) {
	result := []rune(obj.Name)

	return string(result[0:1]), nil
}
