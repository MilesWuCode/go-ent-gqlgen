package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"
	"go-ent-gqlgen/ent"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input ent.CreateUserInput) (*ent.User, error) {
	panic(fmt.Errorf("not implemented: CreateUser - createUser"))
}

// UpdateUser is the resolver for the updateUser field.
func (r *mutationResolver) UpdateUser(ctx context.Context, id int, input ent.UpdateUserInput) (*ent.User, error) {
	panic(fmt.Errorf("not implemented: UpdateUser - updateUser"))
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id int) (*ent.Todo, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// FirstLetter is the resolver for the firstLetter field.
func (r *todoResolver) FirstLetter(ctx context.Context, obj *ent.Todo) (string, error) {
	panic(fmt.Errorf("not implemented: FirstLetter - firstLetter"))
}
